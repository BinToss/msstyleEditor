<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xNzNun2MAAAZaSURBVFhH7Zfr
        b5vlGcbf7/u0r2xog3WrisagqFDKGIyDyooY69RObEPahEKaNG1KTq5DmqOTdC4kDklqx27OxKKQOmno
        fD7VpGncxjY5NHEaaYL/5Lm47+d539evmxTxZfs0Sz9d131+ErmRqv3/M9mx+qOxzvzkeGdBMiYpxQ9D
        9ZXgnP+jtcmFK9s/jNHiwPWR7R9rYx2Fb0fbCxhrLwjyGG3PY7yjIMycRTnHddUn87Jm5PzOdSz4tsWC
        d1vqdW8RBkZOqoGvuKpdac1jtDUvpLYVwLonbUq5Z5Q9warPCvafXlzDvKeoGCkK+gkFe1KJ8jI2a5rv
        Qh6+FsWVFlrWUhAqzhm5B5V68tSj6lame9Yw5y7qbCm9rHtSOijmLTn2mq+ZFulcaabFpOP0Kw3PbGAx
        soVsqoiVW9vIJotIL2wi7N/AF4Or1K96ecarz0930wN4+bA6OHeZlD0xf7kolOc6PUaPNa8th5HzOXgZ
        W06wupuy8FzIIBLIYuf+Du7fv2+ys7MjWS9sIxO8hylHXp/Li6nOVcwNFUVgcAvMHKPHhp8bLJZqhOZp
        WsFIEz2ihBhpJEi5NuO6jZXsKorF4kPJpjcx0ZXDVPuaCHyyhWsPEPiEH6FjibmmeRpywl2/AsZTX/Lu
        Bh3ygx/cxlVfEpubmyXuWbxOMnAPs64tzPYTpNdcW0LG5TmJkdPaj6fQ/uc02kjbjqdF+/E0CFYF1VQ9
        LYZsSeTufI2NjQ2T9XWFEa8sr+PjykV0nswQNy1q+Ixg33EiIxjtw2MpNB9LCtYPjyWJFHnWvUiJlpNf
        iq9SWayurkrW1tZI18r09s2v6dFqXzPNNP+BkDdox5vGHYVmP5oU9qMJlGtSNEufQPMbtIQw8nbyLSf+
        LQqFAr4Pxzv0g/GcPmvskRwt5bTzrydgxf46FQkz9xodlXn2Khfw3UYul9vFykrJd55Mi9Y/JnHhrZRQ
        e3lW7TLucKzZXkmKplcSwqbAeULqq1KNvFmfHVnC3bt3fxCpyBJ6/p7AxXfTsNE+/Y7czzGr1vhSQjS9
        TMWX4zoc6/4lzqsa933uXkQ2my1jeXl5V45JhG6h+68JJG7cwfKtHHr+ltb3yxu8W97RGl+k5d9LTOpn
        Q19haWlpF6k4/cG6kZYYudiNDLr+EkPiyzvI5/MSfkT3O2k0/DaGhhfjovF3ar9Wf4QSzAtx1L8QQ/2R
        uGAajsTR+naYvjQR+AduYnFxcRfJ2E00/ymA2udD4tzzQZmLLNA/txPlx62P4FvqJt2jO1rd4RjqDseF
        0hIfnZvHzMwMPp24imQyhUwmU0YsnIL9rYCcreeZ52IIzifpb0hkz+PMwNk494m65/QZQqs7FMUHRN2h
        GGlMsHeeCWBqasrE7/cjHo8jlUojnaZfd5C+pG9eK5th2t6OisTC3sddZ+J6r4mMtdqDUcGceyaK2oMR
        9FbNYnxsHGNjYxgfHzf99PQ0otEoQjfoO/HGLM4djErMecL+WlSko8u7jvfXxLnP7OdbEoq12qciOKvT
        Xfk5fD4ffF5CV6/Xa8b8oJYTX6D2qSj102E5FxXGPMf2VyNIR0qP6K+OW3rUDM8T5OkBZ34dAdP13mfw
        uD3weCxYY/Jutxud7/ll/1l9zorKRcX530cQnltEX1WMcvTYJynP6HWz/0l+wBMRtP/Dj6GhIcnw0DCG
        h4dVPEix4YmBviFUP3sVpw+EUUOcPhARNQrU0B6LitMHgrJH5hTUR7GsR0XNE8prre/OYGBgQOJyuTDg
        Ut5Ejz92ulB9eAqn99NhC9W/iojq/XSQfM3+COUMuG6oFdVrqNbf3w+mr6/voTh7+1D17BSqfhEW1fvC
        qNoXFkz1L+kBesxavS8EmSOq2Os91t5yQtAuXboE57+cuOQkdTolMqf7XocTlc9M4tRjdPTxkKlVj4dx
        yogfIzVy5KvMHoXRxzVCqlHTent6RW9vLyQ9Onrs6LiIiqcnUPmzkOSUrqb/ue51tSAeQM8HrTtkXnN0
        Of7jcDgEKbo6u8DKdLR2o+I3E3j/pyFBKH2UNWhB1kQFe1mz1FVMdaOvpBWsj3JP8Bv53zO73X7RZrPN
        2hpt10kl/zzkmnn/kdBE5U+Ck6wVpOxZJY8oNXJGL+etcwYcW3u5D4C8b3448b+m7LNXw38XaN8BtVYT
        J2XZLhgAAAAASUVORK5CYII=
</value>
  </data>
</root>