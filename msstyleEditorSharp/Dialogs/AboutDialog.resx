<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>